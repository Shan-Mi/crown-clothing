{"ast":null,"code":"import { UserActionTypes } from \"./user.types\";\nexport const setCurrentUser = user => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user\n});\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n}); // trigger sign-in and let saga know, don't need a payload\n\nexport const googleSignInSuccess = user => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n  payload: user\n});\nexport const googleSignInFailure = error => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n  payload: error\n});\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n}); // trigger sign-in and let saga know, don't need a payload\n\nexport const emailSignInSuccess = () => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_SUCCESS,\n  payload: user\n});\nexport const emailSignInFailure = error => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["C:/Users/Shan/Develop/crown-clothing/src/redux/user/user.actions.js"],"names":["UserActionTypes","setCurrentUser","user","type","SET_CURRENT_USER","payload","googleSignInStart","GOOGLE_SIGN_IN_START","googleSignInSuccess","GOOGLE_SIGN_IN_SUCCESS","googleSignInFailure","error","GOOGLE_SIGN_IN_FAILURE","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","emailSignInSuccess","EMAIL_SIGN_IN_SUCCESS","emailSignInFailure","EMAIL_SIGN_IN_FAILURE"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AAEA,OAAO,MAAMC,cAAc,GAAIC,IAAD,KAAW;AACvCC,EAAAA,IAAI,EAAEH,eAAe,CAACI,gBADiB;AAEvCC,EAAAA,OAAO,EAAEH;AAF8B,CAAX,CAAvB;AAKP,OAAO,MAAMI,iBAAiB,GAAG,OAAO;AACtCH,EAAAA,IAAI,EAAEH,eAAe,CAACO;AADgB,CAAP,CAA1B,C,CAGP;;AAEA,OAAO,MAAMC,mBAAmB,GAAIN,IAAD,KAAW;AAC5CC,EAAAA,IAAI,EAAEH,eAAe,CAACS,sBADsB;AAE5CJ,EAAAA,OAAO,EAAEH;AAFmC,CAAX,CAA5B;AAKP,OAAO,MAAMQ,mBAAmB,GAAIC,KAAD,KAAY;AAC7CR,EAAAA,IAAI,EAAEH,eAAe,CAACY,sBADuB;AAE7CP,EAAAA,OAAO,EAAEM;AAFoC,CAAZ,CAA5B;AAKP,OAAO,MAAME,gBAAgB,GAAIC,gBAAD,KAAuB;AACrDX,EAAAA,IAAI,EAAEH,eAAe,CAACe,mBAD+B;AACTV,EAAAA,OAAO,EAAES;AADA,CAAvB,CAAzB,C,CAGP;;AAEA,OAAO,MAAME,kBAAkB,GAAG,OAAO;AACvCb,EAAAA,IAAI,EAAEH,eAAe,CAACiB,qBADiB;AAEvCZ,EAAAA,OAAO,EAAEH;AAF8B,CAAP,CAA3B;AAKP,OAAO,MAAMgB,kBAAkB,GAAIP,KAAD,KAAY;AAC5CR,EAAAA,IAAI,EAAEH,eAAe,CAACmB,qBADsB;AAE5Cd,EAAAA,OAAO,EAAEM;AAFmC,CAAZ,CAA3B","sourcesContent":["import { UserActionTypes } from \"./user.types\";\n\nexport const setCurrentUser = (user) => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user,\n});\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START,\n});\n// trigger sign-in and let saga know, don't need a payload\n\nexport const googleSignInSuccess = (user) => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n  payload: user,\n});\n\nexport const googleSignInFailure = (error) => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n  payload: error,\n});\n\nexport const emailSignInStart = (emailAndPassword) => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,  payload: emailAndPassword,\n});\n// trigger sign-in and let saga know, don't need a payload\n\nexport const emailSignInSuccess = () => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_SUCCESS,\n  payload: user,\n});\n\nexport const emailSignInFailure = (error) => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_FAILURE,\n  payload: error,\n});\n"]},"metadata":{},"sourceType":"module"}
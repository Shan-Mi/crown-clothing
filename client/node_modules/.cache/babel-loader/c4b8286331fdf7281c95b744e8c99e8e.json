{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { fetchCollectionsStart } from '../redux/shop';\nimport rootReducer from \"./root-reducer\"; // config middleware, can check it out on redux docs\n// middleware is an array\n\nconst sagamiddleware = createSagaMiddleware();\nconst middlewares = [sagamiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // sagamiddleware.run()\n// pass each individuel saga inside of run\n\nexport const persistor = persistStore(store); // a persisted version of our store\n// don't really need to export the upper two\n\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:/Users/Shan/Develop/crown-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","fetchCollectionsStart","rootReducer","sagamiddleware","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,qBAAT,QAAsC,eAAtC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;AACA;;AACA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CAEP;AACA;;AAEA,OAAO,MAAMM,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B,C,CACP;AACA;;AAEA,eAAe;AAAEA,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { fetchCollectionsStart } from '../redux/shop'\n\nimport rootReducer from \"./root-reducer\";\n\n// config middleware, can check it out on redux docs\n// middleware is an array\nconst sagamiddleware = createSagaMiddleware();\n\nconst middlewares = [sagamiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// sagamiddleware.run()\n// pass each individuel saga inside of run\n\nexport const persistor = persistStore(store);\n// a persisted version of our store\n// don't really need to export the upper two\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}